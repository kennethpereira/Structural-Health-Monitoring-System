/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.MunicipalCommisionerWorkArea;

import Business.Architecture.Architecture;
import Business.Email.EmailManagementSystem;
import Business.MunicipalCorporation.MunicipalCorporation;
import Business.Organization.ConstructionCompanyOrganization;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BidWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author User
 */
public class RequestBid extends javax.swing.JPanel {

    /**
     * Creates new form RequestBid
     */
    private JPanel userProcessContainer;
    private MunicipalCorporation mc;
    private UserAccount account;
    
    public RequestBid(JPanel userProcessContainer,MunicipalCorporation mc,UserAccount account) {
        initComponents();
        
        this.userProcessContainer=userProcessContainer;
        this.mc=mc;
        this.account=account;
        
        populateCombo();
    }
    
    public void populateCombo(){
        
        buildingCombo.removeAllItems();
   //     System.out.println(mc);
    //    System.out.println(mc.getBuildingDirectory());
        for(Architecture building:mc.getBuildingDirectory().getBuildingList())
            if(building!=null){
                buildingCombo.addItem(building);
                btnSubmit.setEnabled(true);
            }
            
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buildingCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        fldID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        add(buildingCombo);
        buildingCombo.setBounds(137, 51, 120, 20);

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel2.setText("Building");
        add(jLabel2);
        jLabel2.setBounds(41, 48, 78, 26);

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(80, 132, 110, 23);

        btnSubmit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.setEnabled(false);
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit);
        btnSubmit.setBounds(203, 132, 100, 23);

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("Bid ID");
        add(jLabel3);
        jLabel3.setBounds(41, 88, 78, 26);
        add(fldID);
        fldID.setBounds(137, 88, 120, 26);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bidding-websites-2.jpg"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 550, 370);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        //int lowestbid=Integer.parseInt(fldLowestBid.getText());
        try{
          Architecture b=(Architecture)buildingCombo.getSelectedItem();
        BidWorkRequest bids=new BidWorkRequest();
        bids.setBuilding(b);
        bids.setSender(account);
     //   bids.setLowestBidAmount(lowestbid);
        bids.setStatus("Open");
        String ID=fldID.getText();
        if(ID.trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter the ID.",
                            "ERROR", JOptionPane.ERROR_MESSAGE);   

        }
        else
        bids.setBidRequestID(ID);
        
        
        Organization org = null;
        for (Organization organization : mc.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof ConstructionCompanyOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(bids);
            account.getWorkQueue().getWorkRequestList().add(bids);
        }
        JOptionPane.showMessageDialog(this, "Bid Added to the workQueue");
        fldID.setText("");
        EmailManagementSystem email=mc.getEmail();
                
        for(Organization org1:mc.getOrganizationDirectory().getOrganizationList()){
            if (org1 instanceof ConstructionCompanyOrganization){
                for(Person person:org1.getPersonDirectory().getEmployeeList()){
                    String to=person.getEmailID();
                    String subject="New Project Available";
                    String body="Project for "+b.getArchitectureName()+" is now available. Kindly place your bids";
                    
                    try {
                        email.GenerateMail(to, subject, body);
                    } catch (MessagingException ex) {
                        JOptionPane.showMessageDialog(this, "Email was not delivered");
                        return;
                    }
                }
            }
            
        }  
        buildingCombo.removeItem(b);
         fldID.setText("");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Exception!Please enter the ID.",
                            "ERROR", JOptionPane.ERROR_MESSAGE);   

        }
        
        
        
        
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ReleaseBidsWorkArea rbw = (ReleaseBidsWorkArea) component;
        rbw.populateTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox buildingCombo;
    private javax.swing.JTextField fldID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
