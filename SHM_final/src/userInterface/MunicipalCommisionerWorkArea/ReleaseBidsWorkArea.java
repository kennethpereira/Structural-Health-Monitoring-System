/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.MunicipalCommisionerWorkArea;

import Business.Architecture.Architecture;
import Business.Email.EmailManagementSystem;
import Business.MunicipalCorporation.MunicipalCorporation;
import Business.Organization.ConstructionCompanyOrganization;
import Business.Organization.MunicipalCommsionerOrganization;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BidWorkRequest;
import Business.WorkQueue.CompanyContract;
import Business.WorkQueue.ContractRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userInterface.ConstructionCompanyWorkArea.ReportJPanel;

/**
 *
 * @author User
 */
public class ReleaseBidsWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form ReleaseBidsWorkArea
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private MunicipalCommsionerOrganization mco;
    private MunicipalCorporation municipalCorporation;
    
    public ReleaseBidsWorkArea(JPanel userProcessContainer,UserAccount account,MunicipalCommsionerOrganization mco,MunicipalCorporation municipalCorporation) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.mco=mco;
        this.account=account;
        this.municipalCorporation=municipalCorporation;
        
        populateTable();
        populateContract();
       // pollStatus();
    }
    
    
    
    public void populateTable(){
        
        DefaultTableModel dtm=(DefaultTableModel) bidTable.getModel();
        
        dtm.setRowCount(0);
        
        for (WorkRequest work:account.getWorkQueue().getWorkRequestList()){
            Object[] row=new Object[5];
            
            row[0]=work;
            row[1]=work.getBuilding();
            row[2]=work.getReceiver();
            
            int amount=((BidWorkRequest)work).getBidAmount();
            row[3]=amount;
            row[4]=work.getStatus();
            
            
            dtm.addRow(row);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bidTable = new javax.swing.JTable();
        btnRequestBid = new javax.swing.JButton();
        closeBid = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        contractTable = new javax.swing.JTable();
        btnContract = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bidTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Building", "Company", "Company Bid Price", "Bid Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(bidTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 44, -1, 100));

        btnRequestBid.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnRequestBid.setText("Request Bid");
        btnRequestBid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestBidActionPerformed(evt);
            }
        });
        add(btnRequestBid, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 162, -1, -1));

        closeBid.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        closeBid.setText("Close Bid");
        closeBid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBidActionPerformed(evt);
            }
        });
        add(closeBid, new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 162, -1, -1));

        jButton4.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton4.setText("<< Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 222, -1, -1));

        contractTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ContractID", "Building Name", "Company", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(contractTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 274, -1, 93));

        btnContract.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnContract.setText("Award Contract");
        btnContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContractActionPerformed(evt);
            }
        });
        add(btnContract, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 162, -1, -1));

        btnRefresh.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 222, -1, -1));

        btnReport.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        btnReport.setText("View Contract Reports");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });
        add(btnReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 222, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/biddingwar.jpeg.size.xxlarge.letterbox.jpeg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 550, 370));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestBidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestBidActionPerformed
        // TODO add your handling code here:
        RequestBid rb=new RequestBid(userProcessContainer, municipalCorporation, account);
        userProcessContainer.add("RequestBid", rb);
        
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnRequestBidActionPerformed

    private void closeBidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBidActionPerformed
        // TODO add your handling code here:
        int row=bidTable.getSelectedRow();
        
        if(row<0){
            JOptionPane.showMessageDialog(this, "Select a row");
            return;
        }
        
            WorkRequest work=(WorkRequest) bidTable.getValueAt(row,0);
            
            work.setStatus("Closed");
            EmailManagementSystem email=municipalCorporation.getEmail();
            for(Organization org1:municipalCorporation.getOrganizationDirectory().getOrganizationList()){
            if (org1 instanceof ConstructionCompanyOrganization){
                for(Person person:org1.getPersonDirectory().getEmployeeList()){
                    String to=person.getEmailID();
                    String subject="Project Closed";
                    String body="Project for "+work.getBuilding().getArchitectureName()+" is now Closed.";
                    
                    try {
                        email.GenerateMail(to, subject, body);
                    } catch (MessagingException ex) {
                        JOptionPane.showMessageDialog(this, "Email was not delivered");
                        return;
                    }
                }
            }
        }
            
            populateTable();
        
    }//GEN-LAST:event_closeBidActionPerformed

    private void btnContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContractActionPerformed
        // TODO add your handling code here:
        try{
        int row=bidTable.getSelectedRow();
        
        if(row<0){
            JOptionPane.showMessageDialog(this, "Select a row");
            return;
        }
        
            WorkRequest work=(WorkRequest) bidTable.getValueAt(row,0);
        
            if(work.getStatus().equals("Closed")){
                
            CompanyContract cc=new CompanyContract();
            cc.setCompany(work.getReceiver());
            cc.setContractID(work.getBidRequestID());
            cc.setArchitecture(work.getBuilding());
            cc.setStatus("Pending");
            cc.setSender(work.getSender());
            
            populateContract();
            
            Organization org = null;
        for (Organization organization : municipalCorporation.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof ConstructionCompanyOrganization){
                org = organization;
                break;
            }
        }
        
        if (org!=null){
            if(org.getWorkQueue().getContractList() == null)
                org.getWorkQueue().setContractList(new ArrayList<>());
            org.getWorkQueue().getContractList().add(cc);
            account.getWorkQueue().getContractList().add(cc);
        }
        
        EmailManagementSystem email=municipalCorporation.getEmail();
           
                    String to=work.getReceiver().getPerson().getEmailID();
                    String subject="Contract Awarded";
                    String body="Contarct for "+work.getBuilding().getArchitectureName()+" is awarded to you.";
                    
                    try {
                        email.GenerateMail(to, subject, body);
                    } catch (MessagingException ex) {
                        JOptionPane.showMessageDialog(this, "Email was not delivered");
                        return;
                    }
                
        
       
            
        populateContract();
            }
            else{
              JOptionPane.showMessageDialog(this,"Bid still in open mode");  
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"Problem while selecting the contract.");
        }
    }//GEN-LAST:event_btnContractActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // TODO add your handling code here:
        
        int row=contractTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(this, "Select a row");
        }
        
        ContractRequest contract=(ContractRequest) contractTable.getValueAt(row,0);
        ViewContractReportJPanel vcr=new ViewContractReportJPanel(userProcessContainer, contract);
        userProcessContainer.add("ViewContractReportJPanel", vcr);
        
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnReportActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateContract();
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    public void populateContract(){
        DefaultTableModel model=(DefaultTableModel)contractTable.getModel();
        model.setRowCount(0);
        for(ContractRequest cr:account.getWorkQueue().getContractList()){
            
            Object row[]=new Object[4];
            
            row[0]=cr;
            row[1]=cr.getArchitecture();
            row[2]=cr.getCompany();
            row[3]=((CompanyContract)cr).getStatus();
            
            model.addRow(row);
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bidTable;
    private javax.swing.JButton btnContract;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnRequestBid;
    private javax.swing.JButton closeBid;
    private javax.swing.JTable contractTable;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
