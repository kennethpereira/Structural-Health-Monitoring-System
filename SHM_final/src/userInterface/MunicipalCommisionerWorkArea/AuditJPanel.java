/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.MunicipalCommisionerWorkArea;

import Business.Architecture.Architecture;
import Business.MunicipalCorporation.MunicipalCorporation;
import Business.Organization.ConstructionCompanyOrganization;
import Business.Organization.MunicipalCommsionerOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BidWorkRequest;
import Business.WorkQueue.ContractRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userInterface.ConstructionCompanyWorkArea.DecisionMakingJPanel;

/**
 *
 * @author User
 */
public class AuditJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AuditJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private MunicipalCommsionerOrganization mco;
    private MunicipalCorporation municipalCorporation;
    
    public AuditJPanel(JPanel userProcessContainer,UserAccount account,
            MunicipalCommsionerOrganization mco,MunicipalCorporation municipalCorporation) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.municipalCorporation=municipalCorporation;
        this.mco=mco;
        this.account=account;
        
        populateAudit();
    }
    
    public void populateAudit(){
        
        DefaultTableModel dtm=(DefaultTableModel)tblAudit.getModel();
        
        for(Organization org:municipalCorporation.getOrganizationDirectory().getOrganizationList()){
            if(org instanceof ConstructionCompanyOrganization){
                for(WorkRequest bid:org.getWorkQueue().getWorkRequestList()){
                    
                    Architecture building=bid.getBuilding();
                    Object row[]=new Object[6];
                    row[0]=bid;
                    row[1]=building.getArchitectureName();
                    row[2]=((BidWorkRequest)bid).getStatus();
                    for(ContractRequest con:org.getWorkQueue().getContractList()){
                        if(bid.getBidRequestID().equals(con.getContractID())){
                            row[3]=con.getContractID();
                        }
                    }
                    row[4]=((BidWorkRequest)bid).getBidAmount();
                    row[5]=building.getStatus();
                    
                    dtm.addRow(row);
                }
            }
        }
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAudit = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        tblAudit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Building Name", "Request Status", "Contract Status", "Bid Amount", "Building Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAudit);

        add(jScrollPane1);
        jScrollPane1.setBounds(36, 85, 586, 104);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(90, 238, 96, 31);

        btnPrint.setText("Print / Save");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        add(btnPrint);
        btnPrint.setBounds(339, 238, 106, 31);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Audit-Compliance2.jpg"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 970, 510);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AuditJPanel ajp = (AuditJPanel) component;
            
        PrinterJob pj = PrinterJob.getPrinterJob();
  pj.setJobName(" Print Component ");

  pj.setPrintable (new Printable() {    
    public int print(Graphics pg, PageFormat pf, int pageNum){
      if (pageNum > 0){
      return Printable.NO_SUCH_PAGE;
      }

      Graphics2D g2 = (Graphics2D) pg;
      g2.translate(pf.getImageableX(), pf.getImageableY());
      ajp.paint(g2);
      return Printable.PAGE_EXISTS;
    }
  });
  if (pj.printDialog() == false)
  return;

  try {
        pj.print();
  } catch (PrinterException ex) {
        // handle exception
  }
    }//GEN-LAST:event_btnPrintActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPrint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAudit;
    // End of variables declaration//GEN-END:variables
}
