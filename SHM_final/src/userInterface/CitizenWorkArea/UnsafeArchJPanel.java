/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CitizenWorkArea;

import Business.Architecture.Architecture;
import Business.MunicipalCorporation.MunicipalCorporation;
import Business.Organization.CitizenOrganization;
import Business.Organization.Organization;
import Business.StructuralHealthMonitor.SensorData;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ContractRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author User
 */
public class UnsafeArchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UnsafeArchJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private CitizenOrganization mco;
    private MunicipalCorporation municipalCorporation;
    
    public UnsafeArchJPanel(JPanel userProcessContainer,UserAccount account,CitizenOrganization mco,MunicipalCorporation municipalCorporation) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.mco=mco;
        this.municipalCorporation=municipalCorporation;
        
        populateTable();
    }
    
    public void populateTable(){
        
        DefaultTableModel dtm=(DefaultTableModel)buildingTable.getModel();
        try{
        for(Organization org:municipalCorporation.getOrganizationDirectory().getOrganizationList()){
            if(org.getWorkQueue().getContractList() != null){
                for(ContractRequest contract:org.getWorkQueue().getContractList()){
               Architecture building=contract.getArchitecture();
                
                Object row[]=new Object[2];
                if(building.getStatus() != null && 
                        building.getStatus().equals("Critical!")){
                    row[0]=building;
                    row[1]=building.getStatus();
                dtm.addRow(row);
                }
                
                
            
            }
            }
            
        }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Analysis report not submitted by construction company");
            e.printStackTrace();;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        buildingTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnInfo = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 255));
        setLayout(null);

        buildingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Building", "Building Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(buildingTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(74, 64, 419, 176);

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnBack.setText("<< BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(74, 266, 91, 33);

        btnInfo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnInfo.setText("View More Info");
        btnInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInfoActionPerformed(evt);
            }
        });
        add(btnInfo);
        btnInfo.setBounds(276, 266, 129, 33);
    }// </editor-fold>//GEN-END:initComponents

    private void btnInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInfoActionPerformed
        // TODO add your handling code here:
        int row=buildingTable.getSelectedRow();
        
        if(row<0){
            JOptionPane.showMessageDialog(this, "Select a Row");
            return;
        }
        
        Architecture building=(Architecture) buildingTable.getValueAt(row, 0);
        
        ViewMoreInfoJPanel view1=new ViewMoreInfoJPanel(userProcessContainer,building);
        userProcessContainer.add("ViewMoreInfoJPanel", view1);
        CardLayout layout=(CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnInfoActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnInfo;
    private javax.swing.JTable buildingTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
